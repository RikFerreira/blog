[{"authors":null,"categories":null,"content":"My name is Rik Ferreira Alves and I\u0026rsquo;m undergraduate in Geography at Universidade Estadual de Montes Claros (UNIMONTES). I\u0026rsquo;m a researcher at Regional and Rural Research Center (NEPRA) contributing to the development of the Basic Sanitation Atlas of Minas Gerais.\nMy works are related to digital representation of geographical phenomena, using FOSS geotechnologies and statistics in order to solve problems in Urban Geography, Economic Geography and Demography.\n Download my resumé. -- ","date":1609632000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1609725187,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"My name is Rik Ferreira Alves and I\u0026rsquo;m undergraduate in Geography at Universidade Estadual de Montes Claros (UNIMONTES). I\u0026rsquo;m a researcher at Regional and Rural Research Center (NEPRA) contributing to the development of the Basic Sanitation Atlas of Minas Gerais.","tags":null,"title":"Rik Ferreira Alves","type":"authors"},{"authors":[],"categories":["Linux"],"content":"  The Arch Linux is a distribution focused on minimalism and efficiency, and follows a “do it yourself” philosophy. For giving the user the power to build the system in the way he wants, its installation process may not be trivial to most PC users.\nTo overcome the complexity of the installation process, there are many solutions like the Zen Installer script or the ArcoLinux and Manjaro distributions, but I personally prefer the vanilla installation for its simplicity and flexibility.\nTo help others in the vanilla installation process, I decided to present the steps I usually take when installing the Arch Linux.\nThis post doesn’t intend to be any ultimate installation guide, just a minimal reproducible script that guides my installation process. So I’m assuming that you are aware of the official installation guide (available in portuguese too).\nThere are many good tutorials online complementing the official installation guide and my favorites are:\n Luke Smith tutorial (EN) Diolinux tutorial (PT)  My main motivation for writing this post is to present some troubles I had and doesn’t were covered in any tutorial I found online. Finally, I will present some of the packages I usually install, like my window manager and text editors.\nInstallation Initial setup First, we need to set the correct keyboard layout. To me it is the ABNT2.\nloadkeys br-abnt2 The Arch Linux installation relies on internet connection. To connect to a wireless network, we may use the iwctl command.\niwctl This command will open a prompt where you can interact inside the program. You can list the devices, scan for networks and finally connect to a detected network:\ndevice list # list the devices station wlp3s0 scan # wlp3s0 is my device, detected with the previous command station wlp3s0 connect SSID # you will get the SSID of your network with the previous command To verify your connection you can ping the Arch Linux site.\nping archlinux.org  Partitioning the disks To partition the disks we will use the fdisk utility. It has a concise built-in help so I will just describe the concepts behind disk partitions. We (really) need 2 partitions: one for the EFI /boot and other for /, but it is a good practice to use at least 4.\n /dev/sda1: 512 MB for EFI system partition /dev/sda2: 4 GB for Linux swap /dev/sda3: 30 GB for / /dev/sda4: rest of the space for /home  The official guide recommends at least 260 MB for the /mnt/boot/efi partition, but you may need some space later, depending on your necessities.\nThere isn’t any consensus about the size of the swap partition or if a partition is really needed. You may prefer the swap partition over the swap file if you want to share it with other systems and I suggest the square root of the RAM for its size (in my case, square root of 16).\nThe Arch Linux is a really lightweight distro, and 10 GB may be more than enough for most of the users. I suggest 30 GB, but feel free to change its size.\nAfter creating the partitions we need to format them:\nmkfs.fat -F32 /dev/sda1 mkfs.ext4 /dev/sda3 mkfs.ext4 /dev/sda4 mkswap /dev/sda2 After that, we need to mount the partitions:\nmount /dev/sda3 /mnt swapon /dev/sda2 mkdir /mnt/boot/efi /mnt/home mount /dev/sda1 /mnt/boot/efi mount /dev/sda4 /mnt/home This step is important because it will serve as reference to create the /etc/fstab file.\n Installing the Arch Linux Installing the Arch Linux is simple like that:\npacstrap /mnt base base-devel linux linux-firmware nvim sudo After installed, generate the /etc/fstab file with the genfstab command. Remember to pass the -U option for using the UUID WIKIPEDIA (2021) of the partitions. Don’t worry, you still can edit the file later, just be sure that it will be OK before rebooting.\ngenfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab Then, let’s change the root to the mounted driver and set up the system.\narch-chroot /mnt   Changed root Clock setup In the /usr/share/zoneinfo directory are the time zones files. With the ls command you can identify your region folder and inside it, your time zone file. The ln command here will create a symbolic link in the /etc/localtime folder.\nln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime hwclock --systohc  Hosts file In the /etc/hostname file we will register our pc name. This is the name which will identify the computer in the network.\necho \u0026quot;pcname\u0026quot; \u0026gt;\u0026gt; /etc/hostname vim /etc/hosts In the /etc/hosts we will describe our IP addresses with the hostnames:\n127.0.0.1 localhost ::1 localhost 127.0.1.1 pcname.localdomain pcname  Locale Uncomment your locale in /etc/locale.gen file. To me it’s the pt_BR.UTF-8 UTF-8 line. The locale-gen command is used to generate the locale.\nvim /etc/locale.gen locale-gen In /etc/locale.conf we need to set an environment variable with our locale, and in the /etc/vconsole.conf we will set our keyboard layout (to me it is the ABNT 2).\necho \u0026quot;LANG=pt_BR.UTF-8\u0026quot; \u0026gt;\u0026gt; /etc/locale.conf echo \u0026quot;KEYMAP=br-abnt2\u0026quot; \u0026gt;\u0026gt; /etc/vconsole.conf  Change root password passwd  Add a user The useradd command is used to create a user. The -m option is for creating a folder in /home directory and the -g wheel is for adding the user to the wheel group.\nuseradd -m -g wheel user passwd user  Change sudo permissions To execute commands with super user privileges without going root, we need to install the sudo package. After that, use the visudo command to edit the /etc/sudoers file. You will be able to edit the file directly, but the visudo is the safest way to do that.\nsudo visudo You may be able to change permissions in the /etc/sudoers file just by uncomment some of the existing lines. This is part of my file for reference:\n# User privilege specification root ALL=(ALL:ALL) ALL # Members of the admin group may gain root privileges %admin ALL=(ALL) ALL # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) NOPASSWD: ALL  Grub installation First we need to download the grub with pacman.\npacman -S grub efibootmgr After that, for EFI boot, we have to run grub-install with --target, --efi-directory and --bootloader-id options set like that:\ngrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub To generate the GRUB config file:\ngrub-mkconfig -o /boot/grub/grub.cfg  Download network utilities My router sends a 2472 Hz signal, which isn’t common in the United States, so I have to make my wireless driver recognize my network with the crda utility. crda stands for central regulatory domain agent and relies on ISO standards to communicate with the kernel ARCH LINUX (2021).\nAfter that, the networkmanager and iw will be used to configurate the wi-fi network.\npacman -S iw crda networkmanager After downloaded all the network utilities, you are able to reboot and install all the softwares you want. If this is your first time with Arch, you will notice that you only have a black screen with a prompt, this is because we don’t have any graphic interface yet. There are plenty of options to install, and you can go for one of the desktop environments (DE) out there or you can simply install a window managers (WM).\nI use bspwm. This window manager doesn’t come with a hotkey daemon or a bar, like dwm or i3, so you have to install them. The xorg is the graphic server, and it is required by any other WM or DE.\n Download the window manager pacman -S xorg bspwm sxhkd polybar   References ARCH LINUX. crda(8) - Arch manual pages, 2021. Disponível em: \u0026lt;https://man.archlinux.org/man/crda.8.en\u0026gt;. Acesso em: 26 fev. 2021  WIKIPEDIA. Universally unique identifier, 2021. Disponível em: \u0026lt;https://en.wikipedia.org/wiki/Universally_unique_identifier\u0026gt;. Acesso em: 26 fev. 2021    ","date":1614297600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1614358522,"objectID":"4da43ae3f161a5972ffd1c3bd0922fc9","permalink":"/post/arch-linux-installation/","publishdate":"2021-02-26T00:00:00Z","relpermalink":"/post/arch-linux-installation/","section":"post","summary":"The Arch Linux is a distribution focused on minimalism and efficiency, and follows a “do it yourself” philosophy. For giving the user the power to build the system in the way he wants, its installation process may not be trivial to most PC users.","tags":["Linux","Arch Linux"],"title":"Arch Linux installation guide","type":"post"},{"authors":["Rik Ferreira Alves"],"categories":["Public Data Overview"],"content":"   The brazilian demographic census (Censo Demográfico) is a survey conducted by the Brazilian National Institute of Geography and Statistics (IBGE) every ten years, ideally, just like in the US. This survey is the main source of municipal demographic data in Brazil and covers a fairly wide topics like habitation, education, labor force and migration, to name a few.\nThe purpose of this article is to present the brazilian demographic census to people interested in learning how to use its data to produce ad hoc analysis beyond the tools and reports published by the IBGE. A workflow is proposed jointly with some basic concepts about the survey. Although a basic understanding of R code and tidyverse is needed to follow the tutorial, undergraduate students in any field, journalists and people interested in demographic data independent of the programming background may benefit of this guide.\nBrief history The first census done in Brazil was conducted in 1872 by the General Directory of Statistics (DGE), a precursor of the IBGE, under the administration of the emperor Pedro II. Since the IBGE was created under the administration of the president Getúlio Vargas, the census has been conducted every ten years, in round dates (1940, 1950, …, 2010), except in year 1991 under Fernando Collor, when financial issues delayed the survey, resumed in 2000. The next census after 2010, planned to be done in 2020, was also delayed to 2021 due to the coronavirus pandemic IBGE ([s.d.]).\n Granularity: time and territory Although census data is supposed to be free and open, not every edition is available on the official website of the IBGE. Currently, just 2000 and 2010 microdata are officially available.\nIn Brazil, the smallest federative unit is the municipality, so the census data are available for every aggregation from them. However, the census data are collected (and published) watching the census tracts. These are arbitrarily delimited by the IBGE and respects only physical and administrative boundaries. The table 1 shows an overview of the hierarchy of the territories1 from which the data are available.\n Table 1: Territorial hierarchy from IBGE.    Territory  Description      Union  All the national territory. The sovereignty from which all the other administrative boundaries are delimitated.    States  The second federative entity in the hierarchy. Correspondent to the states of US.    Municipalities  These are the smallest political-administrative territory with representation of Brazil. Somewhat equivalent to the counties of US.    Census tracts  Unlike the others, the census tracts are arbitrarily delimited by the IBGE, and only serve the purpose of guiding the data collection.     Codification To identify the territories, the IBGE uses a codification system which preserves this territorial hierarchy. To exemplify, here is the code of the census tract that contains the Christ the Redeemer statue in Rio de Janeiro (RJ): 330455705280091.\n Table 2: Territorial codes from IBGE.    Code  Territory  Description      33  State  Rio de Janeiro (State)    04557  Municipality  Rio de Janeiro (Municipality)    05  District  Main district    28  Subdistrict  Santa Teresa    0091  Census tract  Census tract     Other boundaries and regionalization from the IBGE may have different structures than this and can be found in IBGE (2019). However, the data is stored and can be retrieved accordingly to the structure presented in table 2.\n  Universe and sample The brazilian demographic census is a survey with two questionnaires: the one from the universe is applied to every person in Brazil and the other from the sample is applied to specific people sampled through a stratified sampling method. The sample questionnaire contains all the subjects of the basic one and expands most of it.\n Basic questionnaire Sample questionnaire  Aiming to preserve the identity of the informants, some strategies are adopted at the moment of publishing the results. While the data from the universe is aggregated by census tracts, in the sample data the identification of the census tracts are replaced with the identification of the so called weighting areas.\nWeighting areas are a group of contiguous census tracts arbitrarily chosen by the IBGE. They are big enough to difficult the identification of the informants but they lack the specificity of the universe data aggregated by census tracts. Other drawback of the weighting areas is that they may challenge some intra-municipal regionalization. On the other hand, this data may be the only available for intra-municipal level that include all the national territory and allow comparison between neighborhoods of different cities.\n A peek on the Census survey design The brazilian demographic census is a stratified sample, which means that all the national territory was divided by census tracts and all of them were used, but, inside the census tract, a simple random sample was drawn from the universe of households inside it.\nThis method is preferred over the simple random sampling method because it guarantees not only that everyone has the same chance to be in the sample, but also that no census tract will be under or over represented in the sample. The main disadvantage of this method is the higher cost in comparison with the simple random sampling LUMLEY (2010).\n Where and how to access the data In this section a workflow to analyze this data is suggested using an example. The analysis is: which are the top 1 origin countries in each weighting area in the city of Rio de Janeiro? To accomplish it, we will tidy the data using the tidyverse metapackage, generate our analysis with the survey package and build a map using the tmap package.\nThe sample microdata and the aggregated data by census tracts are available in the public FTP server of the IBGE. The universe data is fairly easy to open in R and some cleaning may be necessary. However, the sample microdata for the year of 2010 can be a little tricky to analyze, therefore, it will be used in this article.\nThe sample microdata is available as a fixed width text file. In this case we have two options: manually specify the names and widths directly in the script; parse the excel spreadsheet to retrieve the widths and the names. The second option is preferred for reproducibility.\nThe survey package will be used for reconstruct the survey design LUMLEY (2020) and the readxl package for opening the layout file in *.xls format.\nlibrary(tidyverse) library(survey) library(readxl) We will use the data from Rio de Janeiro (RJ). It can be downloaded here, among other states and the documentation zipfile (Documentacao.zip). The function read_microdata is designed for opening any of the four microdata files of the census.\nread_microdata \u0026lt;- function(microdata, topic = c(\u0026quot;domicilios\u0026quot;, \u0026quot;pessoas\u0026quot;, \u0026quot;emigracao\u0026quot;, \u0026quot;mortalidade\u0026quot;)) { match.arg(topic) topic_sheet \u0026lt;- case_when( topic == \u0026quot;domicilios\u0026quot; ~ 1, topic == \u0026quot;pessoas\u0026quot; ~ 2, topic == \u0026quot;emigracao\u0026quot; ~ 3, topic == \u0026quot;mortalidade\u0026quot; ~ 4, ) raw \u0026lt;- read_xls(\u0026quot;~/Layout_microdados_Amostra.xls\u0026quot;, sheet = topic_sheet) layout \u0026lt;- raw %\u0026gt;% select( VAR = 1, START = `...8`, END = `...9`, INT = `...10`, DEC = `...11`, TYPE = `...12` ) %\u0026gt;% slice(-1) %\u0026gt;% mutate( START = as.integer(START), END = as.integer(END), INT = as.integer(INT), DEC = replace_na(DEC, 0) %\u0026gt;% as.integer(), TYPE = str_replace_all(TYPE, \u0026quot;\\n\u0026quot;, \u0026quot;\u0026quot;) %\u0026gt;% str_replace(\u0026quot;A|C\u0026quot;, \u0026quot;c\u0026quot;) %\u0026gt;% str_replace(\u0026quot;N\u0026quot;, \u0026quot;d\u0026quot;) ) microdata \u0026lt;- read_fwf( file = microdata, col_positions = fwf_positions(layout$START, layout$END, layout$VAR), col_types = paste0(rep(\u0026quot;c\u0026quot;, nrow(layout)), collapse = \u0026quot;\u0026quot;) ) for(i in seq_along(microdata)) { if(layout[which(layout$VAR == names(microdata[,i])),]$DEC \u0026gt; 0) { int \u0026lt;- layout[i, ]$INT dec \u0026lt;- layout[i, ]$DEC integer_part \u0026lt;- str_sub(pull(microdata, i), 1, int) decimal_part \u0026lt;- str_sub(pull(microdata, i), int+1, int+dec) float_number \u0026lt;- paste0(integer_part, \u0026quot;.\u0026quot;, decimal_part) %\u0026gt;% as_tibble() %\u0026gt;% type_convert(col_types = \u0026quot;d\u0026quot;) microdata[, i] \u0026lt;- float_number } } microdata \u0026lt;- type_convert( microdata, col_types = paste0(layout$TYPE, collapse = \u0026quot;\u0026quot;) ) return(microdata) } Mind the file size! The computer used to run this code has 16 gigabytes of RAM, but you may not be able to directly open this file in your memory. Consider using SQL databases if you have trouble2.\nrio \u0026lt;- read_microdata(\u0026quot;~/RJ/Amostra_Pessoas_33.txt\u0026quot;, \u0026quot;pessoas\u0026quot;) The RJ people microdata has 2.1 Gb after loaded.\nprint(object.size(rio), units = \u0026quot;auto\u0026quot;) ## 2.1 Gb glimpse(rio) ## Rows: 1,143,650 ## Columns: 244 ## $ V0001 \u0026lt;dbl\u0026gt; 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, … ## $ V0002 \u0026lt;chr\u0026gt; \u0026quot;00100\u0026quot;, \u0026quot;00100\u0026quot;, \u0026quot;00100\u0026quot;, \u0026quot;00100\u0026quot;, \u0026quot;00100\u0026quot;, \u0026quot;00100\u0026quot;, \u0026quot;00100\u0026quot;, \u0026quot;… ## $ V0011 \u0026lt;dbl\u0026gt; 3.3001e+12, 3.3001e+12, 3.3001e+12, 3.3001e+12, 3.3001e+12, 3.30… ## $ V0300 \u0026lt;dbl\u0026gt; 12833, 12833, 20358, 20358, 20358, 20358, 20358, 20358, 27895, 2… ## $ V0010 \u0026lt;dbl\u0026gt; 10.720090, 10.720090, 19.010606, 19.010606, 19.010606, 19.010606… ## $ V1001 \u0026lt;dbl\u0026gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3… ## $ V1002 \u0026lt;chr\u0026gt; \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;05\u0026quot;… ## $ V1003 \u0026lt;chr\u0026gt; \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;013\u0026quot;, \u0026quot;… ## $ V1004 \u0026lt;chr\u0026gt; \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;, \u0026quot;00\u0026quot;… ## $ V1006 \u0026lt;dbl\u0026gt; 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ V0502 \u0026lt;chr\u0026gt; \u0026quot;02\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;04\u0026quot;, \u0026quot;04\u0026quot;, \u0026quot;04\u0026quot;, \u0026quot;04\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;05\u0026quot;… ## $ V0504 \u0026lt;chr\u0026gt; \u0026quot;02\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;03\u0026quot;, \u0026quot;04\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;06\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;03\u0026quot;… ## $ V0601 \u0026lt;dbl\u0026gt; 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2… ## $ V6033 \u0026lt;dbl\u0026gt; 66, 68, 51, 47, 26, 25, 18, 9, 42, 40, 20, 40, 11, 37, 62, 67, 1… ## $ V6036 \u0026lt;dbl\u0026gt; 66, 68, 51, 47, 26, 25, 18, 9, 42, 40, 20, 40, 11, 37, 62, 67, 1… ## $ V6037 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6040 \u0026lt;dbl\u0026gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ V0606 \u0026lt;dbl\u0026gt; 1, 1, 4, 1, 4, 4, 2, 2, 1, 3, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 4, 4… ## $ V0613 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ V0614 \u0026lt;dbl\u0026gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3, 4, 4, 3, 4, 4, 4… ## $ V0615 \u0026lt;dbl\u0026gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4… ## $ V0616 \u0026lt;dbl\u0026gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4… ## $ V0617 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ V0618 \u0026lt;dbl\u0026gt; 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 3, 3, 3, 3, 3, 2, 1… ## $ V0619 \u0026lt;dbl\u0026gt; 1, 1, 1, NA, NA, NA, NA, NA, NA, NA, NA, 3, NA, 3, NA, 3, 1, 1, … ## $ V0620 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, 1, NA,… ## $ V0621 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0622 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, 1, NA,… ## $ V6222 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 3500000, NA, 3500000… ## $ V6224 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0623 \u0026lt;chr\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \u0026quot;017\u0026quot;, NA, \u0026quot;017\u0026quot;, NA… ## $ V0624 \u0026lt;chr\u0026gt; \u0026quot;003\u0026quot;, \u0026quot;003\u0026quot;, \u0026quot;030\u0026quot;, NA, NA, NA, NA, NA, NA, NA, NA, \u0026quot;017\u0026quot;, NA, … ## $ V0625 \u0026lt;dbl\u0026gt; 1, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1,… ## $ V6252 \u0026lt;dbl\u0026gt; 3300000, 3300000, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ V6254 \u0026lt;dbl\u0026gt; 3304805, 3304805, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ V6256 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0626 \u0026lt;dbl\u0026gt; 1, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ V6262 \u0026lt;dbl\u0026gt; 3300000, 3300000, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ V6264 \u0026lt;dbl\u0026gt; 3304805, 3304805, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ V6266 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0627 \u0026lt;dbl\u0026gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ V0628 \u0026lt;dbl\u0026gt; 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 1, 3, 3, 3, 1, 1, 3, 3, 3, 3… ## $ V0629 \u0026lt;chr\u0026gt; NA, NA, NA, NA, NA, NA, NA, \u0026quot;05\u0026quot;, NA, NA, \u0026quot;08\u0026quot;, NA, \u0026quot;05\u0026quot;, NA, NA… ## $ V0630 \u0026lt;chr\u0026gt; NA, NA, NA, NA, NA, NA, NA, \u0026quot;03\u0026quot;, NA, NA, NA, NA, \u0026quot;06\u0026quot;, NA, NA, … ## $ V0631 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0632 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0633 \u0026lt;chr\u0026gt; \u0026quot;10\u0026quot;, \u0026quot;10\u0026quot;, \u0026quot;03\u0026quot;, \u0026quot;04\u0026quot;, \u0026quot;07\u0026quot;, \u0026quot;07\u0026quot;, \u0026quot;06\u0026quot;, NA, \u0026quot;10\u0026quot;, \u0026quot;07\u0026quot;, NA, \u0026quot;1… ## $ V0634 \u0026lt;dbl\u0026gt; 1, 1, 2, 2, 2, 1, NA, NA, 1, 1, NA, 1, NA, 1, NA, NA, NA, NA, 2,… ## $ V0635 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6400 \u0026lt;dbl\u0026gt; 3, 3, 1, 1, 1, 2, 1, 1, 3, 2, 2, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1… ## $ V6352 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6354 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6356 \u0026lt;lgl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0636 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, 1, NA, NA, 1, NA, 1, NA, NA, NA, 2, … ## $ V6362 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6364 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6366 \u0026lt;lgl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0637 \u0026lt;dbl\u0026gt; 1, 1, 1, 1, 3, 3, 3, NA, 1, 1, 3, 1, 3, 1, 1, 1, 3, 3, 1, 1, 1, … ## $ V0638 \u0026lt;chr\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0639 \u0026lt;dbl\u0026gt; 1, 1, 1, 1, NA, NA, NA, NA, 4, 4, NA, 2, NA, 2, 4, 4, NA, NA, 3,… ## $ V0640 \u0026lt;dbl\u0026gt; 1, 1, 1, 1, 5, 5, 5, NA, 3, 5, 5, 1, 5, 1, 3, 4, 5, 5, 5, 5, 1, … ## $ V0641 \u0026lt;dbl\u0026gt; 2, 2, 1, 2, 2, 1, 2, NA, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, … ## $ V0642 \u0026lt;dbl\u0026gt; 2, 2, NA, 2, 1, NA, 2, NA, NA, NA, 2, NA, 2, 2, NA, 2, 2, NA, NA… ## $ V0643 \u0026lt;dbl\u0026gt; 2, 2, NA, 2, NA, NA, 2, NA, NA, NA, 2, NA, 2, 2, NA, 2, 2, NA, N… ## $ V0644 \u0026lt;dbl\u0026gt; 2, 2, NA, 2, NA, NA, 2, NA, NA, NA, 2, NA, 2, 2, NA, 2, 2, NA, N… ## $ V0645 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, NA, NA, 1, 1, NA, 1, NA, NA, 1, NA, NA, 1, … ## $ V6461 \u0026lt;chr\u0026gt; NA, NA, \u0026quot;7213\u0026quot;, NA, \u0026quot;7233\u0026quot;, \u0026quot;4120\u0026quot;, NA, NA, \u0026quot;7212\u0026quot;, \u0026quot;5230\u0026quot;, NA, … ## $ V6471 \u0026lt;chr\u0026gt; NA, NA, \u0026quot;00000\u0026quot;, NA, \u0026quot;45020\u0026quot;, \u0026quot;82001\u0026quot;, NA, NA, \u0026quot;30010\u0026quot;, \u0026quot;48073\u0026quot;,… ## $ V0648 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, NA, NA, 1, 1, NA, 4, NA, NA, 1, NA, NA, 4, … ## $ V0649 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0650 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, NA, NA, NA, N… ## $ V0651 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, NA, NA, 1, 1, NA, 1, NA, NA, 1, NA, NA, 1, … ## $ V6511 \u0026lt;dbl\u0026gt; NA, NA, 1000, NA, 800, 600, NA, NA, 1800, 700, NA, 2800, NA, NA,… ## $ V6513 \u0026lt;dbl\u0026gt; NA, NA, 1000, NA, 800, 600, NA, NA, 1800, 700, NA, 2800, NA, NA,… ## $ V6514 \u0026lt;dbl\u0026gt; NA, NA, 1.96, NA, 1.57, 1.18, NA, NA, 3.53, 1.37, NA, 5.49, NA, … ## $ V0652 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6521 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6524 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6525 \u0026lt;dbl\u0026gt; NA, NA, 1000, NA, 800, 600, NA, NA, 1800, 700, NA, 2800, NA, NA,… ## $ V6526 \u0026lt;dbl\u0026gt; NA, NA, 1.96078, NA, 1.56863, 1.17647, NA, NA, 3.52941, 1.37255,… ## $ V6527 \u0026lt;dbl\u0026gt; 2200, 600, 1000, 0, 800, 600, 0, NA, 1800, 700, 0, 2800, 0, 0, 1… ## $ V6528 \u0026lt;dbl\u0026gt; 4.31373, 1.17647, 1.96078, 0.00000, 1.56863, 1.17647, 0.00000, N… ## $ V6529 \u0026lt;dbl\u0026gt; 2800, 2800, 2400, 2400, 2400, 2400, 2400, 2400, 2500, 2500, 2500… ## $ V6530 \u0026lt;dbl\u0026gt; 5.49020, 5.49020, 4.70588, 4.70588, 4.70588, 4.70588, 4.70588, 4… ## $ V6531 \u0026lt;dbl\u0026gt; 1400.00, 1400.00, 400.00, 400.00, 400.00, 400.00, 400.00, 400.00… ## $ V6532 \u0026lt;dbl\u0026gt; 2.74510, 2.74510, 0.78431, 0.78431, 0.78431, 0.78431, 0.78431, 0… ## $ V0653 \u0026lt;dbl\u0026gt; NA, NA, 50, NA, 50, 44, NA, NA, 50, 40, NA, 80, NA, NA, 40, NA, … ## $ V0654 \u0026lt;dbl\u0026gt; 2, 2, NA, 2, NA, NA, 1, NA, NA, NA, 1, NA, 2, 2, NA, 2, 2, NA, N… ## $ V0655 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, 1, NA, NA, NA, 1, NA, NA, NA, NA, NA, NA… ## $ V0656 \u0026lt;dbl\u0026gt; 1, 1, 0, 0, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, … ## $ V0657 \u0026lt;dbl\u0026gt; 0, 0, 0, 0, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ V0658 \u0026lt;dbl\u0026gt; 0, 0, 0, 0, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ V0659 \u0026lt;dbl\u0026gt; 0, 0, 0, 0, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ V6591 \u0026lt;dbl\u0026gt; 2200, 600, 0, 0, 0, 0, 0, NA, 0, 0, 0, 0, 0, 0, 0, 510, 0, 0, 0,… ## $ V0660 \u0026lt;dbl\u0026gt; NA, NA, 2, NA, 2, 2, NA, NA, 2, 2, NA, 2, NA, NA, 2, NA, NA, 2, … ## $ V6602 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6604 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6606 \u0026lt;lgl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0661 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, NA, NA, 1, 1, NA, 1, NA, NA, 1, NA, NA, 1, … ## $ V0662 \u0026lt;dbl\u0026gt; NA, NA, 2, NA, 2, 3, NA, NA, 3, 3, NA, 2, NA, NA, 2, NA, NA, 2, … ## $ V0663 \u0026lt;dbl\u0026gt; NA, 1, NA, 1, NA, 2, NA, NA, NA, 2, NA, NA, 2, 1, NA, 1, 2, NA, … ## $ V6631 \u0026lt;dbl\u0026gt; NA, 0, NA, 3, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, … ## $ V6632 \u0026lt;dbl\u0026gt; NA, 2, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, … ## $ V6633 \u0026lt;dbl\u0026gt; NA, 2, NA, 4, NA, 0, NA, NA, NA, 0, NA, NA, 0, 2, NA, 2, 0, NA, … ## $ V0664 \u0026lt;dbl\u0026gt; NA, 1, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, … ## $ V6641 \u0026lt;dbl\u0026gt; NA, 0, NA, 3, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, … ## $ V6642 \u0026lt;dbl\u0026gt; NA, 2, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, … ## $ V6643 \u0026lt;dbl\u0026gt; NA, 2, NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, NA, 2, NA, 2, NA, … ## $ V0665 \u0026lt;dbl\u0026gt; NA, 2, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, 2, NA, 2, NA, … ## $ V6660 \u0026lt;dbl\u0026gt; NA, 35, NA, 9, NA, NA, NA, NA, NA, NA, NA, NA, NA, 11, NA, 47, N… ## $ V6664 \u0026lt;dbl\u0026gt; NA, 0, NA, 0, NA, 0, NA, NA, NA, 0, NA, NA, 0, 0, NA, 0, 0, NA, … ## $ V0667 \u0026lt;dbl\u0026gt; NA, 1, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, NA, 1, NA, … ## $ V0668 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6681 \u0026lt;chr\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6682 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V0669 \u0026lt;dbl\u0026gt; NA, 2, NA, 2, NA, 2, NA, NA, NA, 2, NA, NA, 2, 2, NA, 2, 2, NA, … ## $ V6691 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6692 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V6693 \u0026lt;dbl\u0026gt; NA, 0, NA, 0, NA, 0, NA, NA, NA, 0, NA, NA, 0, 0, NA, 0, 0, NA, … ## $ V6800 \u0026lt;dbl\u0026gt; NA, 2, NA, 4, NA, 0, NA, NA, NA, 0, NA, NA, 0, 2, NA, 2, 0, NA, … ## $ V0670 \u0026lt;dbl\u0026gt; 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1… ## $ V0671 \u0026lt;chr\u0026gt; \u0026quot;01\u0026quot;, NA, \u0026quot;02\u0026quot;, NA, \u0026quot;02\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;03\u0026quot;, \u0026quot;03\u0026quot;, NA, NA, … ## $ V6900 \u0026lt;dbl\u0026gt; 2, 2, 1, 2, 1, 1, 1, NA, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, … ## $ V6910 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, 2, NA, 1, 1, 2, 1, NA, NA, 1, NA, NA, 1, 1,… ## $ V6920 \u0026lt;dbl\u0026gt; 2, 2, 1, 2, 1, 1, 2, NA, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, … ## $ V6930 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, NA, NA, 1, 1, NA, 3, NA, NA, 1, NA, NA, 3, … ## $ V6940 \u0026lt;dbl\u0026gt; NA, NA, 3, NA, 3, 3, NA, NA, 3, 3, NA, 5, NA, NA, 3, NA, NA, 5, … ## $ V6121 \u0026lt;chr\u0026gt; \u0026quot;120\u0026quot;, \u0026quot;120\u0026quot;, \u0026quot;110\u0026quot;, \u0026quot;350\u0026quot;, \u0026quot;240\u0026quot;, \u0026quot;350\u0026quot;, \u0026quot;350\u0026quot;, \u0026quot;370\u0026quot;, \u0026quot;110\u0026quot;, \u0026quot;… ## $ V0604 \u0026lt;dbl\u0026gt; 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 3, 1, 3, 2, 3, 1, 1, 2, 2, 2, 3… ## $ V0605 \u0026lt;chr\u0026gt; NA, NA, NA, NA, \u0026quot;02\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;02\u0026quot;, NA, NA, NA, NA, \u0026quot;02\u0026quot;, NA… ## $ V5020 \u0026lt;chr\u0026gt; \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;… ## $ V5060 \u0026lt;dbl\u0026gt; 2, 2, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 2, 2… ## $ V5070 \u0026lt;dbl\u0026gt; 1400.00, 1400.00, 400.00, 400.00, 400.00, 400.00, 400.00, 400.00… ## $ V5080 \u0026lt;dbl\u0026gt; 2.74510, 2.74510, 0.78431, 0.78431, 0.78431, 0.78431, 0.78431, 0… ## $ V6462 \u0026lt;chr\u0026gt; NA, NA, \u0026quot;7245\u0026quot;, NA, \u0026quot;9113\u0026quot;, \u0026quot;4121\u0026quot;, NA, NA, \u0026quot;7243\u0026quot;, \u0026quot;4211\u0026quot;, NA, … ## $ V6472 \u0026lt;chr\u0026gt; NA, NA, \u0026quot;00000\u0026quot;, NA, \u0026quot;50020\u0026quot;, \u0026quot;74090\u0026quot;, NA, NA, \u0026quot;35010\u0026quot;, \u0026quot;53061\u0026quot;,… ## $ V5110 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, NA, NA, 1, 1, NA, 1, NA, NA, 1, NA, NA, 2, … ## $ V5120 \u0026lt;dbl\u0026gt; NA, NA, 1, NA, 1, 1, NA, NA, 1, 1, NA, 1, NA, NA, 1, NA, NA, 2, … ## $ V5030 \u0026lt;dbl\u0026gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3… ## $ V5040 \u0026lt;dbl\u0026gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ V5090 \u0026lt;dbl\u0026gt; 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 3, 3, 3, 3, 1, 1… ## $ V5100 \u0026lt;dbl\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ V5130 \u0026lt;chr\u0026gt; \u0026quot;02\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;03\u0026quot;, \u0026quot;04\u0026quot;, \u0026quot;05\u0026quot;, \u0026quot;06\u0026quot;, \u0026quot;01\u0026quot;, \u0026quot;02\u0026quot;, \u0026quot;03\u0026quot;… ## $ M0502 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0601 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6033 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0606 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0613 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0614 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0615 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0616 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0617 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0618 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0619 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0620 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0621 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0622 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6222 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6224 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0623 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2… ## $ M0624 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0625 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6252 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6254 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6256 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0626 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6262 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6264 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6266 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0627 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0628 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0629 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0630 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0631 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0632 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0633 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0634 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0635 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6352 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6354 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6356 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0636 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6362 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6364 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6366 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0637 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0638 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0639 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0640 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0641 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0642 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0643 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0644 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0645 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6461 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6471 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2… ## $ M0648 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0649 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0650 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0651 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6511 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0652 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6521 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0653 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0654 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0655 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0656 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0657 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0658 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0659 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6591 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0660 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6602 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6604 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6606 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0661 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0662 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0663 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6631 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6632 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6633 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0664 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6641 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6642 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6643 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0665 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6660 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0667 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0668 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6681 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6682 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0669 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6691 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6692 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6693 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0670 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0671 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6800 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6121 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0604 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M0605 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6462 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ M6472 \u0026lt;dbl\u0026gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2… ## $ V1005 \u0026lt;dbl\u0026gt; 1, 1, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… The variable V0001 refers to the state, V0002 refers to the municipality, V0011 refers to the weighting area, V0300 refers to the household and V0010 is the weight of the observation. Let’s filter only the Rio de Janeiro municipality3.\nrio_mun \u0026lt;- rio %\u0026gt;% filter( V0001 == \u0026quot;33\u0026quot;, # This comparison isn\u0026#39;t necessary here, unless you have opened two or more files and binded them V0002 == \u0026quot;04557\u0026quot; ) To reconstruct the sample design, the svydesign function of the survey package is needed. It expects the clusters identification, strata identification, the finite population correction (FPC), the data frame (tibble in this case) and the weights of the observations. The FPC is fairly easy to calculate, and we can pass ~ 1 to the ids argument because the sample doesn’t have any clusters:\nrio_mun \u0026lt;- rio_mun %\u0026gt;% group_by(V0011) %\u0026gt;% mutate(FPC = n()) rio_design \u0026lt;- svydesign( ids = ~ 1, strata = ~ V0011, fpc = ~ FPC, data = rio_mun, weights = ~ V0010 ) The variable V0619 assumes the value 3 to those who weren’t born in the state, the variable V0622 assumes the value 2 to those who were born out of Brazil and the variable V6224 specifies the country of origin.\nrio_top_immigrants \u0026lt;- svytable(~ V0011 + V6224, subset(rio_design, V0619 == 3 \u0026amp; V0622 == 2)) %\u0026gt;% as_tibble() %\u0026gt;% mutate(n = round(n)) %\u0026gt;% group_by(V0011) %\u0026gt;% arrange(-n) %\u0026gt;% slice(1) Now the geobr package will be used to download the vectors of the weighting areas of Rio de Janeiro. The next step is to join with our treated dataset and finally plot the map with the tmap package.\nlibrary(geobr) library(tmap) rio_weighting \u0026lt;- read_weighting_area(3304557) rj_mun \u0026lt;- read_municipality(33) rio_final \u0026lt;- rio_weighting %\u0026gt;% left_join( rio_top_immigrants, by = c(\u0026quot;code_weighting\u0026quot; = \u0026quot;V0011\u0026quot;) ) %\u0026gt;% rename(origin_country = V6224) Here is the map. Note the predominancy of the weighting areas where country 8000620 is the main origin country.\nrio_final %\u0026gt;% tm_shape() + tm_polygons(col = \u0026quot;origin_country\u0026quot;) ## Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1 Although this codification is easy to manipulate, it is difficult to read. Luckily, there is a spreadsheet in the Documentacao.zip file that helps the translation of these codes. Perhaps it is possible to parse it with the readxl package.\ncountry_code \u0026lt;- read_xls(\u0026quot;~/Documentacao/Documentaç╞o/Anexos Auxiliares/Migraç╞o e Deslocamento_Paises estrangeiros.xls\u0026quot;) %\u0026gt;% select( country = 2, code = 3 ) %\u0026gt;% slice(-3) %\u0026gt;% drop_na() %\u0026gt;% mutate( country = str_to_title(country) ) rio_map \u0026lt;- rio_final %\u0026gt;% left_join( country_code, by = c(\u0026quot;origin_country\u0026quot; = \u0026quot;code\u0026quot;) ) %\u0026gt;% mutate( country = as_factor(country) %\u0026gt;% fct_lump(5) # This is important to reduce the amount of classes ) Now, here is the map:\ntm_shape(rj_mun, bbox = st_bbox(rio_map)) + tm_polygons(col = \u0026quot;white\u0026quot;) + tm_shape(rio_map) + tm_polygons( title = \u0026quot;Origin country\u0026quot;, col = \u0026quot;country\u0026quot;, palette = \u0026quot;Pastel2\u0026quot; ) + tm_scale_bar( position = c(\u0026quot;left\u0026quot;, \u0026quot;bottom\u0026quot;) ) + tm_compass( position = c(\u0026quot;left\u0026quot;, \u0026quot;top\u0026quot;) ) + tm_layout( bg.color = \u0026quot;lightblue\u0026quot;, legend.outside = TRUE, legend.outside.position = \u0026quot;right\u0026quot;, legend.outside.size = .15, asp = 1.3 )  References IBGE. Quadro geográfico de referência para produção, análise e disseminação de estatísticas. Rio de Janeiro: IBGE, 2019.  IBGE. IBGE | censo 2010 | materiais | guia do Censo | apresentação. Disponível em: \u0026lt;https://censo2010.ibge.gov.br/materiais/guia-do-censo/apresentacao.html\u0026gt;. Acesso em: 3 jan. 2021.  LUMLEY, T. Complex surveys: a guide to analysis using R. 1. ed. Hoboken: John Wiley; Sons, 2010.  LUMLEY, T. survey: analysis of complex survey samples, 2020.     In this article, hierarchy refers to which boundary contains which, e.g., the states contains the municipalities that contains the census tracts.↩︎\n Also consider to redesign the function read_microdata. It isn’t the most efficient code in the universe. To open this file in R Markdown has taken so much time that the file was preprocessed outside the document and imported with a simple readr::read_csv call. The function works really well, but isn’t that optimized and the R Markdown stresses it.↩︎\n Other variables should be considered in your filter, e.g. the V1006 (Household situation) which characterizes the household as urban or rural.↩︎\n   ","date":1609632000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609725187,"objectID":"e824574a4852e633c6e0efbc52d997ca","permalink":"/post/public-data-overview-brazilian-demographic-census-ibge/","publishdate":"2021-01-03T00:00:00Z","relpermalink":"/post/public-data-overview-brazilian-demographic-census-ibge/","section":"post","summary":"The brazilian demographic census (Censo Demográfico) is a survey conducted by the Brazilian National Institute of Geography and Statistics (IBGE) every ten years, ideally, just like in the US.","tags":["R","GIS","Open Data"],"title":"Public data overview: Brazilian demographic census (IBGE)","type":"post"},{"authors":["Rik Ferreira Alves","Luara Martins de Oliva Santos","Iara Soares de França","Marcos Esdras Leite"],"categories":["R","GIS","Education"],"content":"\n\n","date":1609372800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609419257,"objectID":"29e2172d0ebfd9ff55f17be9aec4f761","permalink":"/publication/spatial-analysis-of-the-public-primary-and-secondary-education-access-in-montes-claros-mg/","publishdate":"2020-12-12T00:00:00Z","relpermalink":"/publication/spatial-analysis-of-the-public-primary-and-secondary-education-access-in-montes-claros-mg/","section":"publication","summary":"Montes Claros is an intermediate city located in Minas Gerais whom walked through an intense process of expansion after the 1970s. In the last 50 years, factors such as its consolidation as a regional center and the intensification of the real estate market contributed to a fast and unequal spread of its urban space. In this regard, this paper has the objective of measure the distribution of the public schools in the city of Montes Claros as well as the demand for this service. Therefore, this study  works  with  the hypothesis that the offer of the public schooling service becomes more insufficient as it move away from the town center. This reserach relied on quantitative methods for the  data extraction and transformation of the aggregated variables to the urban planning region, and worked with secondary fonts for the contextualization of the results, which demonstrate the high concentration of schools in a few regions that polarizes the rest.","tags":["R","GIS","Education"],"title":"Spatial analysis of the public primary and secondary education access in Montes Claros/MG","type":"publication"}]